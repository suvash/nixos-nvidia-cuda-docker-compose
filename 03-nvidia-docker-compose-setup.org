* 03. Setup Docker compose to make use of the NVIDIA gpu

Please make sure that you've installed docker-compose before continuing.  As per the official documentation on gpu support, you'll have to install Docker Compose v1.28.0 or higher for the device structure specification in your compose files. Read more at https://docs.docker.com/compose/gpu-support/

** Install docker compose via your preferred method(configuration, home-manager etc.)

Check the version before you proceed.

#+begin_src sh
  > docker-compose --version
  docker-compose version 1.29.2 ............
#+end_src


** Test using a sample docker-compose.yml

#+begin_src yaml :tangle ./03-files/docker-compose.yml
  services:
    test:
      image: nvidia/cuda:12.2.0-base-ubuntu22.04
      command: nvidia-smi
      deploy:
        resources:
          reservations:
            devices:
            - driver: nvidia
              capabilities: [gpu]
#+end_src

Test the docker-compose against the above service specification.


#+begin_src shell
  > docker-compose up
  Creating network "compose-gpu_default" with the default driver
  Creating compose-gpu_test_1 ... done
  Attaching to compose-gpu_test_1
  test_1  | Wed Apr 13 18:50:02 2022
  test_1  | +-----------------------------------------------------------------------------+
  test_1  | | NVIDIA-SMI 510.60.02    Driver Version: 510.60.02    CUDA Version: 12.2     |
  test_1  | |-------------------------------+----------------------+----------------------+
  test_1  | | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
  test_1  | | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
  test_1  | |                               |                      |               MIG M. |
  test_1  | |===============================+======================+======================|
  test_1  | |   0  NVIDIA GeForce ...  Off  | 00000000:01:00.0 Off |                  N/A |
  test_1  | |  0%   44C    P8    30W / 370W |     54MiB / 24576MiB |      0%      Default |
  test_1  | |                               |                      |                  N/A |
  test_1  | +-------------------------------+----------------------+----------------------+
  test_1  |
  test_1  | +-----------------------------------------------------------------------------+
  test_1  | | Processes:                                                                  |
  test_1  | |  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
  test_1  | |        ID   ID                                                   Usage      |
  test_1  | |=============================================================================|
  test_1  | |    0   N/A  N/A      1280      G                                      52MiB |
  test_1  | +-----------------------------------------------------------------------------+
  compose-gpu_test_1 exited with code 0

  > docker-compose down
  Removing compose-gpu_test_1 ... done
  Removing network compose-gpu_default
#+end_src


At this point, you now should be able to build your images with the libraries as needed. Make sure that you always match the CUDA versions for less surprises, both in the images as well as the libraries.
